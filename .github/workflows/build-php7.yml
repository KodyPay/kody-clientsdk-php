name: Build and Publish PHP7

on:
  push:
    branches:
      - '**'
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout proto repository
        run: |
          git clone https://github.com/KodyPay/kp-protocols-clientsdk.git proto-repo

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, json, grpc, protobuf

      - name: Install Specific Protoc Version
        run: |
          wget https://github.com/protocolbuffers/protobuf/releases/download/v27.1/protoc-27.1-linux-x86_64.zip
          unzip protoc-27.1-linux-x86_64.zip -d protoc
          sudo mv protoc/bin/* /usr/local/bin/
          sudo mv protoc/include/* /usr/local/include/

      - name: Check Protoc Version
        run: |
          protoc --version

      - name: Cache gRPC PHP plugin
        uses: actions/cache@v3
        id: cache-grpc-php-plugin
        with:
          path: |
            ./grpc/cmake/build
          key: ${{ runner.os }}-grpc-php-plugin-v1.64.2

      - name: Build gRPC PHP plugin
        if: steps.cache-grpc-php-plugin.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install -y build-essential autoconf libtool pkg-config
          git clone --recurse-submodules -b v1.64.2  https://github.com/grpc/grpc
          cd grpc
          mkdir -p cmake/build
          cd cmake/build
          cmake ../..
          make grpc_php_plugin

      - name: Install gRPC PHP plugin
        run: |
          sudo cp ./grpc/cmake/build/grpc_php_plugin /usr/local/bin/

      - name: Compile Protobuf file
        run: |
          mkdir -p php7
          protoc --proto_path=proto-repo/src/main/proto --php_out=./php7 --grpc_out=./php7 --plugin=protoc-gen-grpc=/usr/local/bin/grpc_php_plugin proto-repo/src/main/proto/com/kodypay/grpc/pay/v1/pay.proto

      - name: Package the compiled files
        run: |
          zip -r kody-php7-grpc-package.zip php7

      - name: Get ref type and name
        id: get_ref
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          echo "::set-output name=type::tag"
          echo "::set-output name=name::${GITHUB_REF#refs/tags/}"
          else
          echo "::set-output name=type::branch"
          echo "::set-output name=name::${GITHUB_REF#refs/heads/}"
          fi

      - name: Create GitHub Release
        if: steps.get_ref.outputs.type == 'tag'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE }}
        with:
          tag_name: ${{ steps.get_ref.outputs.name }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Create Test GitHub Release
        id: create_test_release
        if: steps.get_ref.outputs.type == 'branch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE }}
        with:
          tag_name: test-${{ steps.get_ref.outputs.name }}-${{ github.sha }}
          release_name: "Test Release ${{ steps.get_ref.outputs.name }}-${{ github.sha }}"
          draft: false
          prerelease: true

      - name: Upload Release Asset
        if: steps.get_ref.outputs.type == 'tag'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: package/kody-php7-grpc-package.zip
          asset_name: kody-php7-grpc-package.zip
          asset_content_type: application/zip
      - name: Upload Release Asset
        if: steps.get_ref.outputs.type == 'branch'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE }}
        with:
          upload_url: ${{ steps.create_test_release.outputs.upload_url }}
          asset_path: package/kody-php7-grpc-package.zip
          asset_name: kody-php7-grpc-package.zip
          asset_content_type: application/zip

