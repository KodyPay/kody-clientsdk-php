name: PHP7 Build and Release

on:
  workflow_run:
    workflows: ["PHP7 Prepare"]
    types:
      - completed

jobs:
  build-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout proto repository
        run: |
          git clone https://github.com/KodyPay/kp-protocols-clientsdk.git proto-repo

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, json, grpc, protobuf

      - name: Install Specific Protoc Version
        run: |
          wget https://github.com/protocolbuffers/protobuf/releases/download/v27.1/protoc-27.1-linux-x86_64.zip
          unzip protoc-27.1-linux-x86_64.zip -d protoc
          sudo mv protoc/bin/* /usr/local/bin/
          sudo mv protoc/include/* /usr/local/include/

      - name: Check Protoc Version
        run: |
          protoc --version

      - name: Cache gRPC PHP plugin
        uses: actions/cache@v4
        id: cache-grpc-php-plugin
        with:
          path: |
            ./grpc/cmake/build
          key: ${{ runner.os }}-grpc-php-plugin-v1_64_2

      - name: Install gRPC PHP plugin
        run: |
          sudo cp ./grpc/cmake/build/grpc_php_plugin /usr/local/bin/

      - name: Compile Protobuf file
        run: |
          mkdir -p php7
          protoc --proto_path=proto-repo/src/main/proto --php_out=./php7 --grpc_out=./php7 --plugin=protoc-gen-grpc=/usr/local/bin/grpc_php_plugin proto-repo/src/main/proto/com/kodypay/grpc/pay/v1/pay.proto

      - name: Package the compiled files
        run: |
          zip -r kody-php7-grpc-package.zip php7

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kody-php7-grpc-package
          path: packages/kody-php7-grpc-package.zip

  tagging-and-publishing:
    needs: build-package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: kody-php7-grpc-package
          path: packages/

      - name: Determine Tag
        id: tag_info
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          if [ "$BRANCH" == "main" ]; then
            DATE=$(date +'%Y%m%d')
            TAG_PREFIX="${DATE}"
          
            # Find the latest tag for the current date
            LATEST_TAG=$(git tag -l "${TAG_PREFIX}*" | sort -r | head -n 1)
            if [ -z "$LATEST_TAG" ]; then
              NEW_TAG="${TAG_PREFIX}.1"
            else
              INCREMENT=$(echo "$LATEST_TAG" | sed 's/.*\.\([0-9]\+\)/\1/')
              NEW_TAG="${TAG_PREFIX}.$((INCREMENT+1))"
            fi
          else
            NEW_TAG="${BRANCH}-dev"
          fi
          echo "::set-output name=tag::$NEW_TAG"

      - name: Create Tag
        run: |
          git tag ${{ steps.tag_info.outputs.tag }}
          git push origin ${{ steps.tag_info.outputs.tag }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_info.outputs.tag }}
          release_name: Release ${{ steps.tag_info.outputs.tag }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/main' }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: kody-php7-grpc-package.zip
          asset_name: kody-php7-grpc-package.zip
          asset_content_type: application/zip